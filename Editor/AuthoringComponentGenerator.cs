using System;
using System.Linq;
using Depra.CodeGen.Attributes;
using Depra.CodeGen.Context;
using Depra.CodeGen.Core;
using Depra.Ecs.Baking.CodeGen.Runtime;

namespace Depra.Ecs.Baking.CodeGen.Editor
{
	[Generator]
	public sealed class AuthoringComponentGenerator : ICodeGenerator
	{
		void ICodeGenerator.Execute(GeneratorContext context)
		{
			var componentTypes = AppDomain.CurrentDomain
				.GetAssemblies()
				.SelectMany(assembly => assembly.GetTypes())
				.Where(type => type.IsValueType && Attribute.IsDefined(type, typeof(DefaultBaking)));

			foreach (var componentType in componentTypes)
			{
				var className = $"{componentType.Name}AuthoringComponent";
				var code = @$"//<auto-generated/>
using Depra.Ecs.Baking.Runtime.Components;

public sealed class {className} : AuthoringComponent<{componentType.FullName}> {{ }}";

				context.AddCode($"AuthoringComponents/{className}.cs", code);
			}
		}
	}
}